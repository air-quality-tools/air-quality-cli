name: build/release

on: push

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    # Raspberry Pi 2, 3
    - name: Create release artifact arm-unknown-linux-gnueabihf
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release_artifact_arm-unknown-linux-gnueabihf
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target arm-unknown-linux-gnueabihf
    # Raspberry Pi Zero, 1
    - name: Create release artifact arm-unknown-linux-musleabi
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release_artifact
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target arm-unknown-linux-musleabi
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/release/air-quality-cli
        asset_name: air-quality-cli
        asset_content_type: application/x-executable
